{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UserAdminComponent = class UserAdminComponent {\n  constructor(database, UserdelService, confirmationService, formBuilder, router) {\n    this.database = database;\n    this.UserdelService = UserdelService;\n    this.confirmationService = confirmationService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.users = [];\n    this.status = \"\";\n    /*delete(id: string) {\r\n          this.database.deleteProduct(id).subscribe({\r\n            next: (data) => {\r\n              this.status = \"Delete successful\";\r\n              this.router.navigate([\"/\"]);\r\n            },\r\n            error: (error) => {\r\n              console.error(\"There was an error!\", error);\r\n            },\r\n          });\r\n    }\r\n            /*Agregado de producto*/\n    this.addUserForm = this.formBuilder.group({\n      correo: '',\n      username: \"\",\n      password: \"\"\n    });\n    this.display = false;\n    this.database.getItems().subscribe(res => {\n      console.log(res);\n      this.users = res;\n    });\n  }\n  //Metodo Delete\n  deleteProduct(correo) {\n    if (confirm('¿Estás seguro de eliminar este usuario?')) {\n      this.UserdelService.deleteUser(correo).subscribe(() => {});\n    }\n    location.reload();\n  }\n  onSubmit() {\n    let p = {\n      id: Number(this.addUserForm.value.id),\n      name: this.addUserForm.value.name,\n      description: this.addUserForm.value.description,\n      price: this.addUserForm.value.price,\n      images: this.addUserForm.value.images\n    };\n    this.database.addUser(p).subscribe({\n      next: data => {\n        this.status = \"Add successful\";\n        this.router.navigate([\"/\"]);\n      },\n      error: error => {\n        console.error(\"There was an error!\", error);\n      }\n    });\n    console.warn('Your order has been submitted', this.addUserForm.value);\n    this.addUserForm.reset();\n    location.reload();\n  }\n  showDialog() {\n    this.display = true;\n  }\n};\nUserAdminComponent = __decorate([Component({\n  selector: \"app-product-admin\",\n  templateUrl: \"./product-admin.component.html\",\n  styleUrls: [\"./product-admin.component.css\"],\n  styles: [`\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `],\n  providers: []\n})], UserAdminComponent);\nexport { UserAdminComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAwB1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,QAAyB,EACzBC,cAA8B,EAC9BC,mBAAwC,EACxCC,WAAwB,EACxBC,MAAc;IAJd,aAAQ,GAARJ,QAAQ;IACR,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;IACnB,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAR1B,UAAK,GAAY,EAAE;IAEnB,WAAM,GAAW,EAAE;IAgCnB;;;;;;;;;;;;IAaA,gBAAW,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACnCC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX,CAAC;IA8BF,YAAO,GAAS,KAAK;IArEnB,IAAI,CAACR,QAAQ,CAACS,QAAQ,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACvCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,KAAK,GAAGH,GAAG;IAClB,CAAC,CAAC;EAKJ;EAIA;EAEFI,aAAa,CAACT,MAAc;IAC1B,IAAIU,OAAO,CAAC,yCAAyC,CAAC,EAAC;MACrD,IAAI,CAACf,cAAc,CAACgB,UAAU,CAACX,MAAM,CAAC,CAACI,SAAS,CAAC,MAAI,CACvD,CAAC,CAAC;;IAEHQ,QAAQ,CAACC,MAAM,EAAE;EAClB;EAsBEC,QAAQ;IACN,IAAIC,CAAC,GAAI;MACPC,EAAE,EAAEC,MAAM,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,CAACH,EAAE,CAAC;MACrCI,IAAI,EAAE,IAAI,CAACF,WAAW,CAACC,KAAK,CAACC,IAAI;MACjCC,WAAW,EAAE,IAAI,CAACH,WAAW,CAACC,KAAK,CAACE,WAAW;MAC/CC,KAAK,EAAE,IAAI,CAACJ,WAAW,CAACC,KAAK,CAACG,KAAK;MACnCC,MAAM,EAAE,IAAI,CAACL,WAAW,CAACC,KAAK,CAACI;KAChC;IAKD,IAAI,CAAC7B,QAAQ,CAAC8B,OAAO,CAACT,CAAC,CAAC,CAACX,SAAS,CAAC;MAEjCqB,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,MAAM,GAAG,gBAAgB;QAC9B,IAAI,CAAC7B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfvB,OAAO,CAACuB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;IACFvB,OAAO,CAACwB,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACZ,WAAW,CAACC,KAAK,CAAC;IACrE,IAAI,CAACD,WAAW,CAACa,KAAK,EAAE;IACxBnB,QAAQ,CAACC,MAAM,EAAE;EACnB;EAGFmB,UAAU;IACR,IAAI,CAACC,OAAO,GAAC,IAAI;EACnB;CAEC;AAxFYzC,kBAAkB,eAf9BD,SAAS,CAAC;EACT2C,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B,CAAC;EAC5CC,MAAM,EAAE,CACN;;;;;;KAMC,CACF;EACDC,SAAS,EAAE;CACZ,CAAC,GACW9C,kBAAkB,CAwF9B;SAxFYA,kBAAkB","names":["Component","UserAdminComponent","constructor","database","UserdelService","confirmationService","formBuilder","router","group","correo","username","password","getItems","subscribe","res","console","log","users","deleteProduct","confirm","deleteUser","location","reload","onSubmit","p","id","Number","addUserForm","value","name","description","price","images","addUser","next","data","status","navigate","error","warn","reset","showDialog","display","selector","templateUrl","styleUrls","styles","providers"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\admin\\user-admin\\user-admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserdelService } from \"src/app/userdel.service\"\nimport { DatabaseService } from \"src/app/database.service\";\nimport { Product } from \"src/app/products\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ConfirmationService } from \"primeng/api\";\nimport { User } from '@auth0/auth0-angular';\n\n@Component({\n  selector: \"app-product-admin\",\n  templateUrl: \"./product-admin.component.html\",\n  styleUrls: [\"./product-admin.component.css\"],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [],\n})\nexport class UserAdminComponent {\n  \n  users: User [] = [];\n\n  status: string = \"\";\n\n  constructor(private database: DatabaseService,\n              private UserdelService: UserdelService,\n              private confirmationService: ConfirmationService,\n              private formBuilder: FormBuilder,\n              private router: Router) {\n\n      \n    \n    this.database.getItems().subscribe(res => {\n      console.log(res);\n      this.users = res;\n    });\n\n  \n\n\n  }\n\n  \n\n  //Metodo Delete\n\ndeleteProduct(correo: string): void {\n  if (confirm('¿Estás seguro de eliminar este usuario?')){\n    this.UserdelService.deleteUser(correo).subscribe(()=>{\n  })\n }\n location.reload();\n}\n  \n  /*delete(id: string) {\n        this.database.deleteProduct(id).subscribe({\n          next: (data) => {\n            this.status = \"Delete successful\";\n            this.router.navigate([\"/\"]);\n          },\n          error: (error) => {\n            console.error(\"There was an error!\", error);\n          },\n        });\n  }\n\n  /*Agregado de producto*/\n  addUserForm = this.formBuilder.group({\n    correo: '',\n    username: \"\",\n    password: \"\"\n  });\n\n\n  onSubmit(): void {\n    let p =  {\n      id: Number(this.addUserForm.value.id),\n      name: this.addUserForm.value.name,\n      description: this.addUserForm.value.description,\n      price: this.addUserForm.value.price,\n      images: this.addUserForm.value.images\n    };\n\n\n\n\n    this.database.addUser(p).subscribe({\n \n      next: (data) => {\n        this.status = \"Add successful\";\n        this.router.navigate([\"/\"]);\n      },\n      error: (error) => {\n        console.error(\"There was an error!\", error);\n      },\n    });    \n    console.warn('Your order has been submitted', this.addUserForm.value);\n    this.addUserForm.reset();\n    location.reload();\n  }\n\n  display:boolean=false;\nshowDialog(){\n  this.display=true;\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}