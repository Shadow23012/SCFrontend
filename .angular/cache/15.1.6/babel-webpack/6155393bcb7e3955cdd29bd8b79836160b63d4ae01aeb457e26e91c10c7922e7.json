{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/userdatabase.service\";\nimport * as i2 from \"src/app/userdel.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/button\";\nimport * as i8 from \"primeng/dialog\";\nfunction UserAdminComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p-button\", 13);\n    i0.ɵɵlistener(\"click\", function UserAdminComponent_ng_template_1_Template_p_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showDialog());\n    });\n    i0.ɵɵelement(2, \"i\", 14);\n    i0.ɵɵtext(3, \"ADD\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"tr\")(5, \"th\");\n    i0.ɵɵtext(6, \"Correo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Options\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UserAdminComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function UserAdminComponent_ng_template_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const user_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteUser(user_r4.correo));\n    });\n    i0.ɵɵtext(8, \"DELETE\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r4.correo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r4.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r4.password);\n  }\n}\nexport class UserAdminComponent {\n  constructor(database, userdelService, confirmationService, formBuilder, router) {\n    this.database = database;\n    this.userdelService = userdelService;\n    this.confirmationService = confirmationService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.users = [];\n    this.status = \"\";\n    /*delete(id: string) {\r\n          this.database.deleteProduct(id).subscribe({\r\n            next: (data) => {\r\n              this.status = \"Delete successful\";\r\n              this.router.navigate([\"/\"]);\r\n            },\r\n            error: (error) => {\r\n              console.error(\"There was an error!\", error);\r\n            },\r\n          });\r\n    }\r\n            /*Agregado de producto*/\n    this.addUserForm = this.formBuilder.group({\n      correo: \"\",\n      username: \"\",\n      password: \"\"\n    });\n    this.display = false;\n    this.database.getUsers().subscribe(res => {\n      console.log(res);\n      this.users = res;\n    });\n  }\n  //Metodo Delete\n  deleteUser(correo) {\n    if (confirm('¿Estás seguro de eliminar este usuario?')) {\n      this.userdelService.deleteUser(correo).subscribe(() => {});\n    }\n    location.reload();\n  }\n  onSubmit() {\n    let p = {\n      correo: this.addUserForm.value.correo,\n      username: this.addUserForm.value.username,\n      password: this.addUserForm.value.password\n    };\n    this.database.addUser(p).subscribe({\n      next: data => {\n        this.status = \"Add successful\";\n        this.router.navigate([\"/\"]);\n      },\n      error: error => {\n        console.error(\"There was an error!\", error);\n      }\n    });\n    console.warn('Your order has been submitted', this.addUserForm.value);\n    this.addUserForm.reset();\n    location.reload();\n  }\n  showDialog() {\n    this.display = true;\n  }\n}\nUserAdminComponent.ɵfac = function UserAdminComponent_Factory(t) {\n  return new (t || UserAdminComponent)(i0.ɵɵdirectiveInject(i1.UserdatabaseService), i0.ɵɵdirectiveInject(i2.UserdelService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Router));\n};\nUserAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserAdminComponent,\n  selectors: [[\"app-user-admin\"]],\n  features: [i0.ɵɵProvidersFeature([])],\n  decls: 19,\n  vars: 3,\n  consts: [[3, \"value\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"visible\", \"visibleChange\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"correo\"], [\"id\", \"correo\", \"type\", \"text\", \"formControlName\", \"correo\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"text\", \"formControlName\", \"password\"], [\"type\", \"submit\", 1, \"button\"], [1, \"Agregar\", 2, \"text-align\", \"right\"], [\"styleClass\", \"p-button-info\", 3, \"click\"], [1, \"pi\", \"pi-plus\", 2, \"color\", \"white\"], [3, \"click\"]],\n  template: function UserAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0);\n      i0.ɵɵtemplate(1, UserAdminComponent_ng_template_1_Template, 13, 0, \"ng-template\", 1);\n      i0.ɵɵtemplate(2, UserAdminComponent_ng_template_2_Template, 9, 3, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p-dialog\", 3);\n      i0.ɵɵlistener(\"visibleChange\", function UserAdminComponent_Template_p_dialog_visibleChange_3_listener($event) {\n        return ctx.display = $event;\n      });\n      i0.ɵɵelementStart(4, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function UserAdminComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 5);\n      i0.ɵɵtext(7, \" Correo \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 7);\n      i0.ɵɵtext(11, \" Username \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 9);\n      i0.ɵɵtext(15, \" Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 11);\n      i0.ɵɵtext(18, \"Add\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.users);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"visible\", ctx.display);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addUserForm);\n    }\n  },\n  dependencies: [i6.Table, i3.PrimeTemplate, i7.Button, i8.Dialog, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","UserAdminComponent","constructor","database","userdelService","confirmationService","formBuilder","router","group","correo","username","password","getUsers","subscribe","res","console","log","users","deleteUser","confirm","location","reload","onSubmit","p","addUserForm","value","addUser","next","data","status","navigate","error","warn","reset","showDialog","display","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\admin\\user-admin\\user-admin.component.html","E:\\Chris\\ShopCart\\src\\app\\admin\\user-admin\\user-admin.component.ts"],"sourcesContent":["\r\n<p-table [value]=\"users\">\r\n    <ng-template pTemplate=\"header\">\r\n\r\n        <div class=\"Agregar\" style=\" text-align: right;\">\r\n            <p-button (click)=\"showDialog()\" styleClass=\"p-button-info\"><i class=\"pi pi-plus\" style=\"color: white\"></i>ADD</p-button>\r\n        </div>\r\n\r\n        <tr>\r\n            <th>Correo</th>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n            <th>Options</th>\r\n            \r\n            \r\n        </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-user>\r\n        <tr>\r\n            <td>{{user.correo}}</td>\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.password}}</td>\r\n            \r\n            <button (click)=\"deleteUser(user.correo)\">DELETE</button>\r\n        </tr>\r\n\r\n        \r\n        \r\n    </ng-template>\r\n\r\n    \r\n</p-table>\r\n\r\n\r\n\r\n<p-dialog [(visible)]=\"display\">\r\n<form [formGroup]=\"addUserForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div>\r\n      <label for=\"correo\"> Correo </label>\r\n      <input id=\"correo\" type=\"text\" formControlName=\"correo\" />\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <label for=\"username\"> Username </label>\r\n      <input id=\"username\" type=\"text\" formControlName=\"username\" />\r\n    </div>    \r\n    <div>\r\n      <label for=\"password\"> Password </label>\r\n      <input id=\"password\" type=\"text\" formControlName=\"password\" />\r\n    </div>\r\n\r\n    <button class=\"button\" type=\"submit\">Add</button>\r\n  </form>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { UserdelService } from \"src/app/userdel.service\"\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { ConfirmationService } from \"primeng/api\";\r\nimport { User } from '@auth0/auth0-angular';\r\nimport { UserdatabaseService } from 'src/app/userdatabase.service';\r\n\r\n@Component({\r\n  selector: 'app-user-admin',\r\n  templateUrl: './user-admin.component.html',\r\n  styleUrls: ['./user-admin.component.css'],\r\n  providers: [],\r\n})\r\nexport class UserAdminComponent {\r\n  \r\n  users: User [] = [];\r\n\r\n  status: string = \"\";\r\n\r\n  constructor(private database: UserdatabaseService,\r\n              private userdelService: UserdelService,\r\n              private confirmationService: ConfirmationService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router) {\r\n\r\n      \r\n    \r\n    this.database.getUsers().subscribe(res => {\r\n      console.log(res);\r\n      this.users = res;\r\n    });\r\n\r\n  \r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n  //Metodo Delete\r\n\r\ndeleteUser(correo: string): void {\r\n  if (confirm('¿Estás seguro de eliminar este usuario?')){\r\n    this.userdelService.deleteUser(correo).subscribe(()=>{\r\n  })\r\n }\r\n location.reload();\r\n}\r\n  \r\n  /*delete(id: string) {\r\n        this.database.deleteProduct(id).subscribe({\r\n          next: (data) => {\r\n            this.status = \"Delete successful\";\r\n            this.router.navigate([\"/\"]);\r\n          },\r\n          error: (error) => {\r\n            console.error(\"There was an error!\", error);\r\n          },\r\n        });\r\n  }\r\n\r\n  /*Agregado de producto*/\r\n  addUserForm = this.formBuilder.group({\r\n    correo: \"\",\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n\r\n  onSubmit(): void {\r\n    let p =  {\r\n      correo: this.addUserForm.value.correo,\r\n      username: this.addUserForm.value.username,\r\n      password: this.addUserForm.value.password,\r\n    };\r\n\r\n\r\n\r\n\r\n    this.database.addUser(p).subscribe({\r\n \r\n      next: (data) => {\r\n        this.status = \"Add successful\";\r\n        this.router.navigate([\"/\"]);\r\n      },\r\n      error: (error) => {\r\n        console.error(\"There was an error!\", error);\r\n      },\r\n    });    \r\n    console.warn('Your order has been submitted', this.addUserForm.value);\r\n    this.addUserForm.reset();\r\n    location.reload();\r\n  }\r\n\r\n  display:boolean=false;\r\nshowDialog(){\r\n  this.display=true;\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}