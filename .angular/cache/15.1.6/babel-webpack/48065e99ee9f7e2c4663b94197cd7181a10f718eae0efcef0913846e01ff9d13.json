{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-paypal\";\nimport * as i4 from \"@angular/router\";\nfunction CartComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, item_r2.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r2.quantity);\n  }\n}\nfunction CartComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total =\", i0.ɵɵpipeBind1(3, 1, ctx_r1.total), \"\");\n  }\n}\nexport class CartComponent {\n  constructor(cartService) {\n    this.cartService = cartService;\n    this.items = this.cartService.getItems();\n    this.total = this.cartService.getTotal();\n  }\n  ngOnInit() {\n    this.initConfig();\n  }\n  initConfig() {\n    this.payPalConfig = {\n      currency: 'EUR',\n      clientId: 'sb',\n      createOrderOnClient: data => ({\n        intent: 'CAPTURE',\n        purchase_units: [{\n          amount: {\n            currency_code: 'EUR',\n            value: '9.99',\n            breakdown: {\n              item_total: {\n                currency_code: 'EUR',\n                value: '9.99'\n              }\n            }\n          },\n          items: [{\n            name: 'Enterprise Subscription',\n            quantity: '1',\n            category: 'DIGITAL_GOODS',\n            unit_amount: {\n              currency_code: 'EUR',\n              value: '9.99'\n            }\n          }]\n        }]\n      }),\n      advanced: {\n        commit: 'true'\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical'\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        actions.order.get().then(details => {\n          console.log('onApprove - you can get full order details inside onApprove: ', details);\n        });\n      },\n      onClientAuthorization: data => {\n        console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n        //this.showSuccess = true;\n      },\n\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n      },\n      onError: err => {\n        console.log('OnError', err);\n      },\n      onClick: (data, actions) => {\n        console.log('onClick', data, actions);\n      }\n    };\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"cart-item\", 4, \"ngIf\"], [3, \"config\"], [1, \"cart-item\"], [2, \"text-align\", \"right\", \"color\", \"red\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Cart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\")(3, \"a\", 0);\n      i0.ɵɵtext(4, \"Shipping Prices\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(5, CartComponent_div_5_Template, 8, 5, \"div\", 1);\n      i0.ɵɵtemplate(6, CartComponent_div_6_Template, 4, 3, \"div\", 2);\n      i0.ɵɵelement(7, \"ngx-paypal\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.total > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"config\", ctx.payPalConfig);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.NgxPaypalComponent, i4.RouterLink, i2.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAMAA,8BAAkD;IAC1CA,YAAe;IAAAA,iBAAO;IAC5BA,4BAAM;IAAAA,YAA2B;;IAAAA,iBAAO;IACxCA,4BAAM;IAAAA,YAAkB;IAAAA,iBAAO;;;;IAFzBA,eAAe;IAAfA,kCAAe;IACfA,eAA2B;IAA3BA,yDAA2B;IAC3BA,eAAkB;IAAlBA,sCAAkB;;;;;IAE1BA,8BAAyC;IACGA,YAA2B;;IAAAA,iBAAO;;;;IAAlCA,eAA2B;IAA3BA,wEAA2B;;;ACFvE,OAAM,MAAOC,aAAa;EAKxBC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAJrB,UAAK,GAAG,IAAI,CAACA,WAAW,CAACC,QAAQ,EAAE;IACnC,UAAK,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;EAI/B;EAIJC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAU;IAChB,IAAI,CAACC,YAAY,GAAG;MACpBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,mBAAmB,EAAGC,IAAI,KAA0B;QAClDC,MAAM,EAAE,SAAS;QACjBC,cAAc,EAAE,CACd;UACEC,MAAM,EAAE;YACNC,aAAa,EAAE,KAAK;YACpBC,KAAK,EAAE,MAAM;YACbC,SAAS,EAAE;cACTC,UAAU,EAAE;gBACVH,aAAa,EAAE,KAAK;gBACpBC,KAAK,EAAE;;;WAGZ;UACDG,KAAK,EAAE,CACL;YACEC,IAAI,EAAE,yBAAyB;YAC/BC,QAAQ,EAAE,GAAG;YACbC,QAAQ,EAAE,eAAe;YACzBC,WAAW,EAAE;cACXR,aAAa,EAAE,KAAK;cACpBC,KAAK,EAAE;;WAEV;SAEJ;OAEJ;MACDQ,QAAQ,EAAE;QACRC,MAAM,EAAE;OACT;MACDC,KAAK,EAAE;QACLC,KAAK,EAAE,QAAQ;QACfC,MAAM,EAAE;OACT;MACDC,SAAS,EAAE,CAAClB,IAAI,EAAEmB,OAAO,KAAI;QAC3BC,OAAO,CAACC,GAAG,CAAC,0DAA0D,EAAErB,IAAI,EAAEmB,OAAO,CAAC;QACtFA,OAAO,CAACG,KAAK,CAACC,GAAG,EAAE,CAACC,IAAI,CAAEC,OAAY,IAAI;UACxCL,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAEI,OAAO,CAAC;QACvF,CAAC,CAAC;MACJ,CAAC;MACDC,qBAAqB,EAAG1B,IAAI,IAAI;QAC9BoB,OAAO,CAACC,GAAG,CAAC,0GAA0G,EAAErB,IAAI,CAAC;QAC7H;MACF,CAAC;;MACD2B,QAAQ,EAAE,CAAC3B,IAAI,EAAEmB,OAAO,KAAI;QAC1BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAErB,IAAI,EAAEmB,OAAO,CAAC;MACxC,CAAC;MACDS,OAAO,EAAEC,GAAG,IAAG;QACbT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEQ,GAAG,CAAC;MAC7B,CAAC;MACDC,OAAO,EAAE,CAAC9B,IAAI,EAAEmB,OAAO,KAAI;QACzBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErB,IAAI,EAAEmB,OAAO,CAAC;MACvC;KACD;EACD;;AA1EW9B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA0C;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV1B/C,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MACbA,yBAAG;MACyBA,+BAAe;MAAAA,iBAAI;MAI/CA,8DAIM;MACNA,8DAEM;MAENA,gCAAiD;;;MATTA,eAAQ;MAARA,mCAAQ;MAK1CA,eAAe;MAAfA,oCAAe;MAITA,eAAuB;MAAvBA,yCAAuB","names":["i0","CartComponent","constructor","cartService","getItems","getTotal","ngOnInit","initConfig","payPalConfig","currency","clientId","createOrderOnClient","data","intent","purchase_units","amount","currency_code","value","breakdown","item_total","items","name","quantity","category","unit_amount","advanced","commit","style","label","layout","onApprove","actions","console","log","order","get","then","details","onClientAuthorization","onCancel","onError","err","onClick","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\cart\\cart.component.html","E:\\Chris\\ShopCart\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<h3>Cart</h3>\r\n<p>\r\n  <a routerLink=\"/shipping\">Shipping Prices</a>\r\n</p>\r\n\r\n\r\n<div class=\"cart-item\" *ngFor=\"let item of items\">\r\n  <span>{{ item.name }}</span>\r\n  <span>{{ item.price | currency }}</span>\r\n  <span>{{ item.quantity}}</span>\r\n</div>\r\n<div *ngIf=\"total > 0\" class=\"cart-item\">\r\n  <span style=\"text-align:right; color:red\">Total ={{total | currency}}</span>\r\n</div>\r\n\r\n<ngx-paypal [config]=\"payPalConfig\"></ngx-paypal>","import { Component, OnInit } from '@angular/core';\r\nimport { IPayPalConfig, ICreateOrderRequest } from 'ngx-paypal';\r\nimport { CartService } from '../cart.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\n\r\nexport class CartComponent {\r\n\r\n  items = this.cartService.getItems();\r\n  total = this.cartService.getTotal();\r\n\r\n  constructor(\r\n    private cartService: CartService\r\n  ) { }\r\n \r\n  public payPalConfig?: IPayPalConfig;\r\n\r\n  ngOnInit(): void {\r\n    this.initConfig();\r\n  }\r\n\r\n  private initConfig(): void {\r\n    this.payPalConfig = {\r\n    currency: 'EUR',\r\n    clientId: 'sb',\r\n    createOrderOnClient: (data) => <ICreateOrderRequest>{\r\n      intent: 'CAPTURE',\r\n      purchase_units: [\r\n        {\r\n          amount: {\r\n            currency_code: 'EUR',\r\n            value: '9.99',\r\n            breakdown: {\r\n              item_total: {\r\n                currency_code: 'EUR',\r\n                value: '9.99'\r\n              }\r\n            }\r\n          },\r\n          items: [\r\n            {\r\n              name: 'Enterprise Subscription',\r\n              quantity: '1',\r\n              category: 'DIGITAL_GOODS',\r\n              unit_amount: {\r\n                currency_code: 'EUR',\r\n                value: '9.99',\r\n              },\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    advanced: {\r\n      commit: 'true'\r\n    },\r\n    style: {\r\n      label: 'paypal',\r\n      layout: 'vertical'\r\n    },\r\n    onApprove: (data, actions) => {\r\n      console.log('onApprove - transaction was approved, but not authorized', data, actions);\r\n      actions.order.get().then((details: any) => {\r\n        console.log('onApprove - you can get full order details inside onApprove: ', details);\r\n      });\r\n    },\r\n    onClientAuthorization: (data) => {\r\n      console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\r\n      //this.showSuccess = true;\r\n    },\r\n    onCancel: (data, actions) => {\r\n      console.log('OnCancel', data, actions);\r\n    },\r\n    onError: err => {\r\n      console.log('OnError', err);\r\n    },\r\n    onClick: (data, actions) => {\r\n      console.log('onClick', data, actions);\r\n    },\r\n  };\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}