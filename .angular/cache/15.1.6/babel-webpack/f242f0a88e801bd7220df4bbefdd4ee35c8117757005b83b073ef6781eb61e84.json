{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductAdminComponent = class ProductAdminComponent {\n  constructor(database, UserdelService, confirmationService, formBuilder, router) {\n    this.database = database;\n    this.UserdelService = UserdelService;\n    this.confirmationService = confirmationService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.products = [];\n    this.status = \"\";\n    /*delete(id: string) {\r\n          this.database.deleteProduct(id).subscribe({\r\n            next: (data) => {\r\n              this.status = \"Delete successful\";\r\n              this.router.navigate([\"/\"]);\r\n            },\r\n            error: (error) => {\r\n              console.error(\"There was an error!\", error);\r\n            },\r\n          });\r\n    }\r\n            /*Agregado de producto*/\n    this.addProductForm = this.formBuilder.group({\n      id: '',\n      name: \"\",\n      description: \"\",\n      price: 0,\n      images: [\"\"]\n    });\n    this.display = false;\n    this.database.getItems().subscribe(res => {\n      console.log(res);\n      this.products = res;\n    });\n  }\n  //Metodo Delete\n  deleteProduct(id) {\n    if (confirm('¿Estás seguro de eliminar este producto?')) {\n      this.UserdelService.deleteProduct(id).subscribe(() => {});\n    }\n    location.reload();\n  }\n  onSubmit() {\n    let p = {\n      id: Number(this.addProductForm.value.id),\n      name: this.addProductForm.value.name,\n      description: this.addProductForm.value.description,\n      price: this.addProductForm.value.price,\n      images: this.addProductForm.value.images\n    };\n    this.database.addProduct(p).subscribe({\n      next: data => {\n        this.status = \"Add successful\";\n        this.router.navigate([\"/\"]);\n      },\n      error: error => {\n        console.error(\"There was an error!\", error);\n      }\n    });\n    console.warn('Your order has been submitted', this.addProductForm.value);\n    this.addProductForm.reset();\n    location.reload();\n  }\n  showDialog() {\n    this.display = true;\n  }\n};\nProductAdminComponent = __decorate([Component({\n  selector: \"app-product-admin\",\n  templateUrl: \"./product-admin.component.html\",\n  styleUrls: [\"./product-admin.component.css\"],\n  styles: [`\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `],\n  providers: []\n})], ProductAdminComponent);\nexport { ProductAdminComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAuB1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhCC,YAAoBC,QAAyB,EACzBC,cAA8B,EAC9BC,mBAAwC,EACxCC,WAAwB,EACxBC,MAAc;IAJd,aAAQ,GAARJ,QAAQ;IACR,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;IACnB,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAR1B,aAAQ,GAAe,EAAE;IAEzB,WAAM,GAAW,EAAE;IAgCnB;;;;;;;;;;;;IAaA,mBAAc,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACtCC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IA8BF,YAAO,GAAS,KAAK;IAvEnB,IAAI,CAACV,QAAQ,CAACW,QAAQ,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACvCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACG,QAAQ,GAAGH,GAAG;IACrB,CAAC,CAAC;EAKJ;EAIA;EAEFI,aAAa,CAACX,EAAU;IACtB,IAAIY,OAAO,CAAC,0CAA0C,CAAC,EAAC;MACtD,IAAI,CAACjB,cAAc,CAACgB,aAAa,CAACX,EAAE,CAAC,CAACM,SAAS,CAAC,MAAI,CACtD,CAAC,CAAC;;IAEHO,QAAQ,CAACC,MAAM,EAAE;EAClB;EAwBEC,QAAQ;IACN,IAAIC,CAAC,GAAI;MACPhB,EAAE,EAAEiB,MAAM,CAAC,IAAI,CAACC,cAAc,CAACC,KAAK,CAACnB,EAAE,CAAC;MACxCC,IAAI,EAAE,IAAI,CAACiB,cAAc,CAACC,KAAK,CAAClB,IAAI;MACpCC,WAAW,EAAE,IAAI,CAACgB,cAAc,CAACC,KAAK,CAACjB,WAAW;MAClDC,KAAK,EAAE,IAAI,CAACe,cAAc,CAACC,KAAK,CAAChB,KAAK;MACtCC,MAAM,EAAE,IAAI,CAACc,cAAc,CAACC,KAAK,CAACf;KACnC;IAKD,IAAI,CAACV,QAAQ,CAAC0B,UAAU,CAACJ,CAAC,CAAC,CAACV,SAAS,CAAC;MAEpCe,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,MAAM,GAAG,gBAAgB;QAC9B,IAAI,CAACzB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfjB,OAAO,CAACiB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;IACFjB,OAAO,CAACkB,IAAI,CAAC,+BAA+B,EAAE,IAAI,CAACR,cAAc,CAACC,KAAK,CAAC;IACxE,IAAI,CAACD,cAAc,CAACS,KAAK,EAAE;IAC3Bd,QAAQ,CAACC,MAAM,EAAE;EACnB;EAGFc,UAAU;IACR,IAAI,CAACC,OAAO,GAAC,IAAI;EACnB;CAEC;AA1FYrC,qBAAqB,eAfjCD,SAAS,CAAC;EACTuC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B,CAAC;EAC5CC,MAAM,EAAE,CACN;;;;;;KAMC,CACF;EACDC,SAAS,EAAE;CACZ,CAAC,GACW1C,qBAAqB,CA0FjC;SA1FYA,qBAAqB","names":["Component","ProductAdminComponent","constructor","database","UserdelService","confirmationService","formBuilder","router","group","id","name","description","price","images","getItems","subscribe","res","console","log","products","deleteProduct","confirm","location","reload","onSubmit","p","Number","addProductForm","value","addProduct","next","data","status","navigate","error","warn","reset","showDialog","display","selector","templateUrl","styleUrls","styles","providers"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\admin\\user-admin\\user-admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserdelService } from \"src/app/userdel.service\"\nimport { DatabaseService } from \"src/app/database.service\";\nimport { Product } from \"src/app/products\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ConfirmationService } from \"primeng/api\";\n\n@Component({\n  selector: \"app-product-admin\",\n  templateUrl: \"./product-admin.component.html\",\n  styleUrls: [\"./product-admin.component.css\"],\n  styles: [\n    `\n      :host ::ng-deep .p-dialog .product-image {\n        width: 150px;\n        margin: 0 auto 2rem auto;\n        display: block;\n      }\n    `,\n  ],\n  providers: [],\n})\nexport class ProductAdminComponent {\n  \n  products: Product [] = [];\n\n  status: string = \"\";\n\n  constructor(private database: DatabaseService,\n              private UserdelService: UserdelService,\n              private confirmationService: ConfirmationService,\n              private formBuilder: FormBuilder,\n              private router: Router) {\n\n      \n    \n    this.database.getItems().subscribe(res => {\n      console.log(res);\n      this.products = res;\n    });\n\n  \n\n\n  }\n\n  \n\n  //Metodo Delete\n\ndeleteProduct(id: number): void {\n  if (confirm('¿Estás seguro de eliminar este producto?')){\n    this.UserdelService.deleteProduct(id).subscribe(()=>{\n  })\n }\n location.reload();\n}\n  \n  /*delete(id: string) {\n        this.database.deleteProduct(id).subscribe({\n          next: (data) => {\n            this.status = \"Delete successful\";\n            this.router.navigate([\"/\"]);\n          },\n          error: (error) => {\n            console.error(\"There was an error!\", error);\n          },\n        });\n  }\n\n  /*Agregado de producto*/\n  addProductForm = this.formBuilder.group({\n    id: '',\n    name: \"\",\n    description: \"\",\n    price: 0,\n    images: [\"\"]\n  });\n\n\n  onSubmit(): void {\n    let p =  {\n      id: Number(this.addProductForm.value.id),\n      name: this.addProductForm.value.name,\n      description: this.addProductForm.value.description,\n      price: this.addProductForm.value.price,\n      images: this.addProductForm.value.images\n    };\n\n\n\n\n    this.database.addProduct(p).subscribe({\n \n      next: (data) => {\n        this.status = \"Add successful\";\n        this.router.navigate([\"/\"]);\n      },\n      error: (error) => {\n        console.error(\"There was an error!\", error);\n      },\n    });    \n    console.warn('Your order has been submitted', this.addProductForm.value);\n    this.addProductForm.reset();\n    location.reload();\n  }\n\n  display:boolean=false;\nshowDialog(){\n  this.display=true;\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}