{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n/* . . . */\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n    this.total = 0;\n  }\n  /* . . . */\n  addToCart(product) {\n    let p = {\n      id: product.id,\n      name: product.name,\n      price: product.price,\n      description: product.description,\n      quantity: 1\n    };\n    this.items.push(p);\n  }\n  getItems() {\n    return this.items;\n  }\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n  //Total de compra en carrito de compra.\n  setTotal(total) {\n    this.total = total;\n  }\n  //Obtener el total de la compra\n  getTotal() {\n    return this.total;\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAGA;AAIA,OAAM,MAAOA,WAAW;EA2BtBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IA3Bd,UAAK,GAAkB,EAAE;IACzB,UAAK,GAAW,CAAC;EA2Bd;EAxBL;EAEEC,SAAS,CAACC,OAAgB;IACxB,IAAIC,CAAC,GAAG;MACNC,EAAE,EAACF,OAAO,CAACE,EAAE;MACbC,IAAI,EAACH,OAAO,CAACG,IAAI;MACjBC,KAAK,EAACJ,OAAO,CAACI,KAAK;MACnBC,WAAW,EAACL,OAAO,CAACK,WAAW;MAC/BC,QAAQ,EAAE;KACX;IACD,IAAI,CAACC,KAAK,CAACC,IAAI,CAACP,CAAC,CAAC;EACpB;EAEAQ,QAAQ;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEAG,SAAS;IACP,IAAI,CAACH,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;EAMAI,iBAAiB;IACf,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAkC,uBAAuB,CAAC;EAChF;EAEA;EACAC,QAAQ,CAACC,KAAY;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAGA;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;;AA5CWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["CartService","constructor","http","addToCart","product","p","id","name","price","description","quantity","items","push","getItems","clearCart","getShippingPrices","get","setTotal","total","getTotal","factory","providedIn"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\cart.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { CartProduct, Product } from './products';\r\nimport { Injectable } from '@angular/core';\r\n/* . . . */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  items: CartProduct[] = [];\r\n  total: number = 0;\r\n\r\n\r\n/* . . . */\r\n\r\n  addToCart(product: Product) {\r\n    let p = {\r\n      id:product.id,\r\n      name:product.name,\r\n      price:product.price,\r\n      description:product.description,\r\n      quantity: 1\r\n    }\r\n    this.items.push(p);\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  clearCart() {\r\n    this.items = [];\r\n    return this.items;\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  getShippingPrices() {\r\n    return this.http.get<{type: string, price: number}[]>('/assets/shipping.json');\r\n  }\r\n\r\n  //Total de compra en carrito de compra.\r\n  setTotal(total:number) {\r\n    this.total = total;\r\n  }\r\n\r\n\r\n  //Obtener el total de la compra\r\n  getTotal() {\r\n    return this.total;\r\n  }\r\n  \r\n/* . . . */\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}