{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserdatabaseService {\n  constructor(http) {\n    this.http = http;\n    //URL para consumir los usuarios\n    this.baseUrl = \"http://localhost:5000/users\";\n    this.items = []; //Usuarios vacíos iniciando\n  }\n  // GET\n  getUsers() {\n    return this.http.get(this.baseUrl);\n  }\n  //Add\n  addUser(user) {\n    let p = {\n      correo: user.correo,\n      username: user.username,\n      password: user.password\n    };\n    return this.http.post(this.baseUrl, p);\n  }\n}\nUserdatabaseService.ɵfac = function UserdatabaseService_Factory(t) {\n  return new (t || UserdatabaseService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserdatabaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserdatabaseService,\n  factory: UserdatabaseService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AAWA,OAAM,MAAOA,mBAAmB;EAO9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB;IACA,YAAO,GAAG,6BAA6B;IACvC,UAAK,GAAW,EAAE,CAAC,CAAC;EAEmB;EAGvC;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAC5C;EAEA;EACCC,OAAO,CAACC,IAAS;IAChB,IAAIC,CAAC,GAAG;MACNC,MAAM,EAAEF,IAAI,CAACE,MAAM;MACnBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MACvBC,QAAQ,EAAEJ,IAAI,CAACI;KAChB;IACD,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACP,OAAO,EAAEG,CAAC,CAAC;EACxC;;AAvBWR,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAa,SAAnBb,mBAAmB;EAAAc,YAJlB;AAAM","names":["UserdatabaseService","constructor","http","getUsers","get","baseUrl","addUser","user","p","correo","username","password","post","factory","providedIn"],"sourceRoot":"","sources":["E:\\Chris\\ShopCart\\src\\app\\userdatabase.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { User } from \"@auth0/auth0-angular\";\n\n\n@Injectable({\n  providedIn: \"root\",\n})\n\n\nexport class UserdatabaseService {\n\n\n  //URL para consumir los usuarios\n  baseUrl = \"http://localhost:5000/users\";\n  items: User[] = []; //Usuarios vacíos iniciando\n \n  constructor(private http: HttpClient) {}\n\n\n  // GET\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl);\n  }\n\n  //Add\n   addUser(user: any): Observable<any> {\n    let p = {\n      correo: user.correo,\n      username: user.username,\n      password: user.password\n    }\n    return this.http.post(this.baseUrl, p);\n  }\n\n  //Delete\n  /*deleteProduct(id: string): Observable<any> {\n    try {\n      return this.http.delete<Product>(this.baseUrl + \"/\" + id);\n    } catch (error) {\n      return this.http.delete<Product>(this.baseUrl + \"/\" + id);\n    }\n  }\n\n  //Edit\n\n*/\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}